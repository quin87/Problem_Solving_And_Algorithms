#!/bin/python3

import math
import os
import random
import re
import sys
sys.setrecursionlimit(200000)
#
# Complete the 'passwordCracker' function below.
#
# The function is expected to return a STRING.
# The function accepts following parameters:
#  1. STRING_ARRAY passwords
#  2. STRING loginAttempt
#

memo = {}
def helper(passwords,loginAttempt,stack):
    global memo
    #print(loginAttempt,cn)
    if len(loginAttempt)==0:
        return True
    if loginAttempt in memo:
        #print("memo hit")
        return False
    for password in passwords:
        if loginAttempt.startswith(password):
            boo = helper(passwords,loginAttempt[len(password):],stack)
            memo[loginAttempt]=True
            if boo:
                #print(password)
                stack.append(password)
                return True
    return False       

def passwordCracker(passwords, loginAttempt):
    global memo
    memo = {}
    stack = []
    res = helper(passwords,loginAttempt,stack)
    if res:
        ans = stack[len(stack)-1]
        for i in range(len(stack)-2,-1,-1):
            ans += " "+stack[i]
        return ans
    return "WRONG PASSWORD"

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    t = int(input().strip())

    for t_itr in range(t):
        n = int(input().strip())

        passwords = input().rstrip().split()

        loginAttempt = input()

        result = passwordCracker(passwords, loginAttempt)

        fptr.write(result + '\n')

    fptr.close()
